---

- name: Install helpful development packages
  dnf: name={{ item }} state=present
  with_items:
    - git
    - python-virtualenvwrapper
    - vim-enhanced

- name: Check out additional FMN git repositories
  become_user: "{{ ansible_env.SUDO_USER }}"
  git:
    repo: https://github.com/fedora-infra/{{ item }}
    dest: /home/{{ ansible_env.SUDO_USER }}/devel/{{ item }}
    update: no
  with_items:
    - fmn.web
    - fmn.sse

- name: Install fmn system dependencies
  dnf: name={{ item }} state=present
  with_items:
    - gcc
    - graphviz
    - libffi-devel
    - make
    - openssl-devel
    - python2-devel
    - python3-devel
    - rabbitmq-server
    - redhat-rpm-config
    - redis
    - swig
    - zeromq-devel

# Add various helpful configuration files
- name: Install a custom bashrc
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy: src=bashrc dest=/home/{{ ansible_env.SUDO_USER }}/.bashrc

- name: Install the message of the day
  copy: src=motd dest=/etc/motd

- name: Create python2-fmn virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "source ~/.bashrc && mkvirtualenv python2-fmn"
  args:
    creates: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/python2-fmn

- name: Create python3-fmn virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "source ~/.bashrc && mkvirtualenv --python=python3 python3-fmn"
  args:
    creates: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/python3-fmn

# For some reason, doing ``python setup.py develop`` fails to install
# Flask, whereas doing it with pip works fine
- name: Install Python 2 runtime requirements
  become_user: "{{ ansible_env.SUDO_USER }}"
  pip:
    requirements: "{{ item }}/requirements.txt"
    virtualenv: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/python2-fmn/
    virtualenv_python: python2
  with_items:
    - "."
    - "fmn.web"
    - "fmn.sse"
  args:
    chdir: /home/{{ ansible_env.SUDO_USER }}/devel

# Ansible with Pip and Python 3 seems to try to install to the global site-packages
# NOTE: Sadly fmn.web isn't Python 3 compatible yet
- name: Install Python 3 runtime requirements
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "source ~/.bashrc && workon python3-fmn && pip install -r {{ item }}/requirements.txt"
  with_items:
    - "."
    - "fmn.sse"
  args:
    chdir: /home/{{ ansible_env.SUDO_USER }}/devel

- name: Install Python 2 dev requirements for fmn
  become_user: "{{ ansible_env.SUDO_USER }}"
  pip:
    requirements: "dev-requirements.txt"
    virtualenv: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/python2-fmn/
    virtualenv_python: python2
  args:
    chdir: /home/{{ ansible_env.SUDO_USER }}/devel


- name: Install Python 2 dev requirements for fmn.web and fmn.sse
  become_user: "{{ ansible_env.SUDO_USER }}"
  pip:
    requirements: "{{ item }}/tests-requirements.txt"
    virtualenv: /home/{{ ansible_env.SUDO_USER }}/.virtualenvs/python2-fmn/
    virtualenv_python: python2
  with_items:
    - "fmn.web"
    - "fmn.sse"
  args:
    chdir: /home/{{ ansible_env.SUDO_USER }}/devel

# NOTE: Sadly fmn.web isn't Python 3 compatible yet
- name: Install Python 3 dev requirements for fmn
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "source ~/.bashrc && workon python3-fmn && pip install -r dev-requirements.txt"
  args:
    chdir: /home/{{ ansible_env.SUDO_USER }}/devel

- name: Install Python 3 dev requirements for fmn.sse
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "source ~/.bashrc && workon python3-fmn && pip install -r tests-requirements.txt"
  args:
    chdir: /home/{{ ansible_env.SUDO_USER }}/devel/fmn.sse

- name: Install fmn packages into the Python 2 virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "pushd {{ item }} && source ~/.bashrc && workon python2-fmn && python setup.py develop && popd"
  with_items:
    - "."
    - "fmn.web"
    - "fmn.sse"
  args:
    chdir: /home/{{ ansible_env.SUDO_USER }}/devel

- name: Install fmn packages into the Python 3 virtualenv
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "source ~/.bashrc && workon python3-fmn && pip install -e ."
  args:
    chdir: /home/{{ ansible_env.SUDO_USER }}/devel

- name: Enable the RabbitMQ management console
  command: rabbitmq-plugins enable rabbitmq_management

- name: Start and enable redis
  service: name=redis state=started enabled=yes

- name: Start and enable RabbitMQ
  service: name=rabbitmq-server state=started enabled=yes

- name: Create user systemd directory
  become_user: "{{ ansible_env.SUDO_USER }}"
  file:
    path: /home/{{ ansible_env.SUDO_USER }}/.config/systemd/user/
    state: directory

- name: Install a fmn service files
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy:
    src: "{{ item }}"
    dest: /home/{{ ansible_env.SUDO_USER }}/.config/systemd/user/{{ item }}
  with_items:
    - "fedmsg-hub.service"
    - "fmn-backend.service"
    - "fmn-digests.service"
    - "fmn-sse.service"
    - "fmn-worker.service"
    - "fmn-web.service"

- name: Reload the systemd daemon
  become_user: "{{ ansible_env.SUDO_USER }}"
  command: systemctl --user daemon-reload

- name: Install fedmsg config to ~/.fedmsg.d
  become_user: "{{ ansible_env.SUDO_USER }}"
  copy:
    src: fedmsg.d/
    dest: /home/{{ ansible_env.SUDO_USER }}/.fedmsg.d

- name: Create fmn database
  become_user: "{{ ansible_env.SUDO_USER }}"
  shell: "source ~/.bashrc && workon python2-fmn && python ~/devel/createdb.py --with-dev-data"
  args:
    creates: /var/tmp/fmn-dev-db.sqlite
